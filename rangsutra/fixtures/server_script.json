[
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Save",
  "event_frequency": "All",
  "modified": "2021-11-09 13:43:22.851796",
  "name": "send_email_to_purchase_manager_from_stock_entry",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Stock Entry",
  "script": "count = 0\nfor row in doc.items:\n    if row.t_warehouse:\n        count =count+1\nif doc.stock_entry_type == \"Manufacture\" and doc.inspection_required == 1 and count > 0:\n    def send_email_to_all_quality_manager(doc,email_template):\n        quality_manager_list=frappe.db.sql(\"\"\"select u.name,u.full_name as user_name\n        \t\tfrom `tabUser` u,`tabHas Role` r where\n        \t\tu.name=r.parent and u.enabled = 1 and r.role=\"Quality Manager\" \"\"\",as_dict=True)\n        if quality_manager_list:\n            for row in  quality_manager_list:\n                if row.name != \"Administrator\":\n                    frappe.sendmail(recipients=row.name,\n                    subject=email_template.subject,\n                    message=frappe.render_template(email_template.response_html, {'items': doc.items,'work_order':doc.work_order,\"quality_manager\":row.user_name}),\n                            reference_doctype=doc.doctype,\n                            reference_name=doc.name)\n                        \n    email_template = frappe.get_doc('Email Template','In house QC Template')\n    \n    field_name=frappe.db.sql(\"\"\"SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS where TABLE_NAME=%s  and COLUMN_NAME=%s;\"\"\",('tabStock Entry','branch'),as_list=True)\n    if not field_name:\n        send_email_to_all_quality_manager(doc,email_template)\n    else:\n        if doc.branch!=None:\n            quality_manager_list=frappe.db.sql(\"\"\"select u.name,u.full_name as user_name from  `tabHas Role` r\n        \t\t\tRIGHT JOIN `tabUser` u\n        \t\t\ton u.name=r.parent\n        \t\t \tLEFT JOIN `tabBranch Details` b on\n        \t\t\tu.name=b.parent where b.branch= %(branch)s and r.role=\"Quality Manager\" and u.enabled = 1 \"\"\",{'branch':doc.branch},as_dict=True)\n            if quality_manager_list:\n                for row in  quality_manager_list:\n                    if row.name != \"Administrator\":\n                        frappe.sendmail(recipients=row.name,\n                        subject=email_template.subject,\n                        message=frappe.render_template(email_template.response_html, {'items': doc.items,'work_order':doc.work_order,\"quality_manager\":row.user_name}),\n                            reference_doctype=doc.doctype,\n                            reference_name=doc.name)\n        \n        else:\n            send_email_to_all_quality_manager(doc,email_template)",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "event_frequency": "All",
  "modified": "2021-10-14 14:27:59.402271",
  "name": "send_email_to_warehouse_manager_for_purchase_receipt",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Purchase Receipt",
  "script": "email_template = frappe.get_doc('Email Template','Purchase Receipt Template')\nwarehouse_manager_user=frappe.db.get_value('Warehouse',{'name':doc.set_warehouse},'warehouse_manager')\nsubmitted_by=frappe.db.get_value(\"User\",{\"name\":frappe.session.user},\"full_name\")\nif warehouse_manager_user:\n    email_address=frappe.db.get_value('User',{'name':warehouse_manager_user},'email')\n    user_name=frappe.db.get_value('User',{'name':warehouse_manager_user},'first_name')\n    frappe.sendmail(recipients=email_address,\n        subject=\"Purchase Receipt is Submitted Successfully\",\n        message=frappe.render_template(email_template.response_html, {'items':doc.items,'name':doc.name,'user_name':user_name,'purchase_order':doc.purchase_order,'submitted_by':submitted_by}),\n                reference_doctype=doc.doctype,\n                reference_name=doc.name)",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": "insert_barcode",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": null,
  "modified": "2021-05-17 14:10:40.578598",
  "name": "insert_item_barcode",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "item_code=frappe.form_dict.get(\"item_code\")\ndocval=frappe.db.get_value(\"Item Barcode\",{\"parent\":item_code,\"parenttype\":\"Item\",\"barcode\":item_code},\"barcode\")\nif not docval:\n    doc = frappe.get_doc('Item',item_code )\n    doc.append('barcodes', {\n    'barcode': item_code,\n    'system_generated_barcode': 1\n    })\n    doc.save()\n    frappe.response['message']=doc\nelse:\n    frappe.response['message'] = \"barcode not inserted\"",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": null,
  "modified": "2021-10-01 16:11:18.714155",
  "name": "item_codification",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Item",
  "script": "if doc.variant_of and doc.is_finished_product == 1 and doc.fabric_or_yarn != 1:\n    if doc.updated_item == 0:\n        att_abbr= \"\"\n        for attribute_list in doc.attributes:\n            abbr=frappe.db.get_value(\"Item Attribute Value\",{\"parent\":attribute_list.attribute,\"attribute_value\":attribute_list.attribute_value,\"parenttype\":\"Item Attribute\"},\"abbr\")\n            if(\"colour\" in attribute_list.attribute.lower() or \"color\" in attribute_list.attribute.lower()):\n                color_abbr=abbr\n            elif(\"size\" in attribute_list.attribute.lower()):\n                size_abbr=abbr\n            else:\n                att_abbr = att_abbr+\"-\"+str(abbr)\n        if att_abbr:\n            res = str(doc.variant_of)+str(color_abbr)+\"-\"+str(size_abbr)+att_abbr\n        else:\n            res = str(doc.variant_of)+str(color_abbr)+\"-\"+str(size_abbr)\n        doc.item_code=res\n        doc.updated_item = 1\n        \nintermediate_product = 0        \nif doc.variant_of:\n    intermediate_product = frappe.db.get_value(\"Item\",{\"name\":doc.variant_of},\"intermediate_product\")\nif doc.variant_of and doc.is_finished_product == 0 and intermediate_product == 1 and doc.fabric_or_yarn != 1:\n    if doc.updated_item == 0:\n        for attribute_list in doc.attributes:\n            abbr=frappe.db.get_value(\"Item Attribute Value\",{\"parent\":attribute_list.attribute,\"attribute_value\":attribute_list.attribute_value,\"parenttype\":\"Item Attribute\"},\"abbr\")\n            if(\"colour\" in attribute_list.attribute.lower() or \"color\" in attribute_list.attribute.lower()):\n                color_abbr=abbr\n            elif(\"size\" in attribute_list.attribute.lower()):\n                size_abbr=abbr\n            elif(\"stage\" in attribute_list.attribute.lower()):\n                stage_abbr=abbr\n        res = str(doc.variant_of)+str(color_abbr)+\"-\"+str(size_abbr)+\"-\"+str(stage_abbr)\n        doc.item_code=res\n        doc.updated_item = 1\n        \nif doc.variant_of and doc.fabric_or_yarn == 1:\n    if doc.updated_item == 0:\n        for attribute_list in doc.attributes:\n            abbr=frappe.db.get_value(\"Item Attribute Value\",{\"parent\":attribute_list.attribute,\"attribute_value\":attribute_list.attribute_value,\"parenttype\":\"Item Attribute\"},\"abbr\")\n            if(\"colour\" in attribute_list.attribute.lower() or \"color\" in attribute_list.attribute.lower()):\n                color_abbr=abbr\n            elif(\"width\" in attribute_list.attribute.lower() or \"form\" in attribute_list.attribute.lower()):\n                size_abbr=abbr\n        res = str(doc.variant_of)+\"-\"+str(color_abbr)+\"-\"+str(size_abbr)\n        doc.item_code=res\n        doc.updated_item = 1",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "event_frequency": null,
  "modified": "2021-05-17 16:59:08.846944",
  "name": "send_mail_for_order_qty",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Sales Order",
  "script": "warehouse_list=[]\nfor item in doc.items:\n    if item.warehouse not in warehouse_list:\n        warehouse_list.append(item.warehouse)\nsend_email_flag=False\n\nfor warehouse in warehouse_list:\n    warehouse_manager_user=frappe.db.get_value('Warehouse',{'name':warehouse},'warehouse_manager')\n    if warehouse_manager_user:\n        email_address=frappe.db.get_value('User',{'name':warehouse_manager_user},'email')\n        first_name=frappe.db.get_value('User',{'name':warehouse_manager_user},'first_name')\n        item_list=frappe.db.get_list('Sales Order Item',\n        filters={\n            'parent':doc.name,\n            'warehouse':warehouse\n        },\n        fields=['item_name','name']\n        )\n        if item_list:\n            content1=\"Dear \"+first_name+\",\"+\"<br>\"+\"<br>\"+\"This is to inform you that the Ordered Quantity for \"\n            for items in item_list:\n                item_doc=frappe.get_doc('Sales Order Item',items.name) \n                if item_doc:\n                    if item_doc.qty>=item_doc.actual_qty:\n                        content1=content1+\"<b>\"+ items.item_name+\"</b>\"+\",\"\n                        send_email_flag=True\n            if send_email_flag==True:\n                frappe.sendmail(recipients=email_address,\n            \t\tsubject=\"Stock Availability Notification\",\n            \t\tmessage= content1+\" is more than the available quantity at \"+\"<b>\"+warehouse+\"</b>\"+\". Please follow with the team to avoid any shortage. \"+\"<br>\"+\"<br>\"+\n            \"Thanks and Regards,\"+\"<br>\"+\"<b>\"+\n        doc.company+\"</b>\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "event_frequency": null,
  "modified": "2021-05-17 16:59:15.363258",
  "name": "send_email_to_warehouse_manager",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Sales Order",
  "script": "warehouse_list=[]\nfor item in doc.items:\n    if item.warehouse not in warehouse_list:\n        warehouse_list.append(item.warehouse)\n        \n        \nfor warehouse in warehouse_list:\n        warehouse_manager_user=frappe.db.get_value('Warehouse',{'name':warehouse},'warehouse_manager')\n        if warehouse_manager_user:\n            email_address=frappe.db.get_value('User',{'name':warehouse_manager_user},'email')\n            first_name=frappe.db.get_value('User',{'name':warehouse_manager_user},'first_name')\n            my_attachments = [frappe.attach_print(doc.doctype, doc.name, file_name=doc.name)]\n            frappe.sendmail(recipients=email_address,\n                \t\tsubject=\"Sales Order -\"+doc.name+\" Confirmation notice\",\n                \t\tmessage= \"Dear \"+first_name+\",\"+\"<br>\"+\"<br>\"+\n                \t\t\" This message is to let you know that the following items have been ordered by the customer <b>\"+doc.customer+\"</b>.The details of the order have been enclosed within this mail for your reference.Order Number: <b>\"+doc.name+\"</b>.\"+\n                \t\t\"<br>\"+\"<br>\"+\n                \"Thanks and Regards,\"+\"<br>\"+\"<b>\"+\n                doc.company+\"</b>\",\n                reference_doctype=doc.doctype,\n            \treference_name=doc.name,\n            \tattachments=my_attachments)",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Submit",
  "event_frequency": null,
  "modified": "2021-07-01 11:06:18.779594",
  "name": "Stock Reconciliation Before Submit",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Stock Reconciliation",
  "script": "if doc.purpose==\"Opening Stock\":\n    for items in frappe.db.get_list(\"Stock Reconciliation Item\",filters={\"parenttype\":\"Stock Reconciliation\",\"parent\":doc.name},fields={\"item_code\"}):\n        docval=frappe.db.get_value(\"Item Barcode\",{\"parent\":items.item_code,\"parenttype\":\"Item\",\"barcode\":items.item_code},\"barcode\")\n        if not docval:\n            item_doc = frappe.get_doc('Item',items.item_code )\n            item_doc.append('barcodes', {\n            'barcode': items.item_code,\n            'system_generated_barcode': 1\n            })\n            item_doc.save()",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Submit",
  "event_frequency": null,
  "modified": "2021-07-01 11:23:05.479730",
  "name": "Stock Entry Before Submit",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Stock Entry",
  "script": "if doc.stock_entry_type==\"Material Receipt\":\n    for items in frappe.db.get_list(\"Stock Entry Detail\",filters={\"parenttype\":\"Stock Entry\",\"parent\":doc.name},fields={\"item_code\"}):\n        docval=frappe.db.get_value(\"Item Barcode\",{\"parent\":items.item_code,\"parenttype\":\"Item\",\"barcode\":items.item_code},\"barcode\")\n        if not docval:\n            item_doc = frappe.get_doc('Item',items.item_code )\n            item_doc.append('barcodes', {\n            'barcode': items.item_code,\n            'system_generated_barcode': 1\n            })\n            item_doc.save()",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": null,
  "modified": "2021-07-26 16:37:58.835224",
  "name": "add_financial_year_to_payment_request",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Payment Request",
  "script": "doc.financial_year = frappe.db.get_value(\"Fiscal Year\",{\"disabled\":0,\"year_start_date\":[\"<=\",frappe.utils.getdate()],\"year_end_date\":[\">=\",frappe.utils.getdate()]},\"year\")\ndoc.branch_abbr = frappe.db.get_value(\"Branch\",{\"name\":doc.branch},\"abbr\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": null,
  "modified": "2021-07-28 05:37:06.976150",
  "name": "add_financial_year_to_purchase_order",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Purchase Order",
  "script": "doc.financial_year = frappe.db.get_value(\"Fiscal Year\",{\"disabled\":0,\"year_start_date\":[\"<=\",frappe.utils.getdate()],\"year_end_date\":[\">=\",frappe.utils.getdate()]},\"year\")\ndoc.branch_abbr = frappe.db.get_value(\"Branch\",{\"name\":doc.branch},\"abbr\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": null,
  "modified": "2021-07-28 05:46:01.638091",
  "name": "add_financial_year_to_stock_entry",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Stock Entry",
  "script": "doc.financial_year = frappe.db.get_value(\"Fiscal Year\",{\"disabled\":0,\"year_start_date\":[\"<=\",frappe.utils.getdate()],\"year_end_date\":[\">=\",frappe.utils.getdate()]},\"year\")\ndoc.branch_abbr = frappe.db.get_value(\"Branch\",{\"name\":doc.branch},\"abbr\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": null,
  "modified": "2021-07-28 05:53:25.339946",
  "name": "add_financial_year_to_payment_entry",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Payment Entry",
  "script": "doc.financial_year = frappe.db.get_value(\"Fiscal Year\",{\"disabled\":0,\"year_start_date\":[\"<=\",frappe.utils.getdate()],\"year_end_date\":[\">=\",frappe.utils.getdate()]},\"year\")\ndoc.branch_abbr = frappe.db.get_value(\"Branch\",{\"name\":doc.branch},\"abbr\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": null,
  "modified": "2021-07-28 05:54:55.689417",
  "name": "add_financial_year_to_payment_order",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Payment Order",
  "script": "doc.financial_year = frappe.db.get_value(\"Fiscal Year\",{\"disabled\":0,\"year_start_date\":[\"<=\",frappe.utils.getdate()],\"year_end_date\":[\">=\",frappe.utils.getdate()]},\"year\")\ndoc.branch_abbr = frappe.db.get_value(\"Branch\",{\"name\":doc.branch},\"abbr\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": null,
  "modified": "2021-07-28 10:45:37.091730",
  "name": "add_financial_year_to_purchase_receipt",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Purchase Receipt",
  "script": "doc.financial_year = frappe.db.get_value(\"Fiscal Year\",{\"disabled\":0,\"year_start_date\":[\"<=\",frappe.utils.getdate()],\"year_end_date\":[\">=\",frappe.utils.getdate()]},\"year\")\ndoc.branch_abbr = frappe.db.get_value(\"Branch\",{\"name\":doc.branch},\"abbr\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": null,
  "modified": "2021-07-28 10:46:30.345181",
  "name": "add_financial_year_to_purchase_invoice",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Purchase Invoice",
  "script": "doc.financial_year = frappe.db.get_value(\"Fiscal Year\",{\"disabled\":0,\"year_start_date\":[\"<=\",frappe.utils.getdate()],\"year_end_date\":[\">=\",frappe.utils.getdate()]},\"year\")\ndoc.branch_abbr = frappe.db.get_value(\"Branch\",{\"name\":doc.branch},\"abbr\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": null,
  "modified": "2021-07-28 10:47:06.098178",
  "name": "add_financial_year_to_pick_list",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Pick List",
  "script": "doc.financial_year = frappe.db.get_value(\"Fiscal Year\",{\"disabled\":0,\"year_start_date\":[\"<=\",frappe.utils.getdate()],\"year_end_date\":[\">=\",frappe.utils.getdate()]},\"year\")\ndoc.branch_abbr = frappe.db.get_value(\"Branch\",{\"name\":doc.branch},\"abbr\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": null,
  "modified": "2021-07-28 10:48:54.629661",
  "name": "add_financial_year_to_packing_slip",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Packing Slip",
  "script": "doc.financial_year = frappe.db.get_value(\"Fiscal Year\",{\"disabled\":0,\"year_start_date\":[\"<=\",frappe.utils.getdate()],\"year_end_date\":[\">=\",frappe.utils.getdate()]},\"year\")\ndoc.branch_abbr = frappe.db.get_value(\"Branch\",{\"name\":doc.branch},\"abbr\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": null,
  "modified": "2021-08-02 19:55:42.082846",
  "name": "add_financial_year_to_delivery_note",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Delivery Note",
  "script": "doc.financial_year = frappe.db.get_value(\"Fiscal Year\",{\"disabled\":0,\"year_start_date\":[\"<=\",frappe.utils.getdate()],\"year_end_date\":[\">=\",frappe.utils.getdate()]},\"year\")\ndoc.branch_abbr = frappe.db.get_value(\"Branch\",{\"name\":doc.branch},\"abbr\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": null,
  "modified": "2021-08-02 19:58:15.794075",
  "name": "add_financial_year_to_material_request",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Material Request",
  "script": "doc.financial_year = frappe.db.get_value(\"Fiscal Year\",{\"disabled\":0,\"year_start_date\":[\"<=\",frappe.utils.getdate()],\"year_end_date\":[\">=\",frappe.utils.getdate()]},\"year\")\ndoc.branch_abbr = frappe.db.get_value(\"Branch\",{\"name\":doc.branch},\"abbr\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": null,
  "modified": "2021-08-02 21:46:08.816828",
  "name": "add_financial_year_to_pos_invoice",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "POS Invoice",
  "script": "doc.financial_year = frappe.db.get_value(\"Fiscal Year\",{\"disabled\":0,\"year_start_date\":[\"<=\",frappe.utils.getdate()],\"year_end_date\":[\">=\",frappe.utils.getdate()]},\"year\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": null,
  "modified": "2021-08-02 21:53:34.874150",
  "name": "add_financial_year_to_stock_reconciliation",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Stock Reconciliation",
  "script": "doc.financial_year = frappe.db.get_value(\"Fiscal Year\",{\"disabled\":0,\"year_start_date\":[\"<=\",frappe.utils.getdate()],\"year_end_date\":[\">=\",frappe.utils.getdate()]},\"year\")\ndoc.branch_abbr = frappe.db.get_value(\"Branch\",{\"name\":doc.branch},\"abbr\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": null,
  "modified": "2021-08-02 22:00:54.152617",
  "name": "add_financial_year_to_sales_order",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Sales Order",
  "script": "doc.financial_year = frappe.db.get_value(\"Fiscal Year\",{\"disabled\":0,\"year_start_date\":[\"<=\",frappe.utils.getdate()],\"year_end_date\":[\">=\",frappe.utils.getdate()]},\"year\")\ndoc.branch_abbr = frappe.db.get_value(\"Branch\",{\"name\":doc.branch},\"abbr\")",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": null,
  "modified": "2021-11-10 11:32:07.316735",
  "name": "add_financial_year_to_sales_invoice",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Sales Invoice",
  "script": "doc.financial_year = frappe.db.get_value(\"Fiscal Year\",{\"disabled\":0,\"year_start_date\":[\"<=\",frappe.utils.getdate()],\"year_end_date\":[\">=\",frappe.utils.getdate()]},\"year\")\ndoc.branch_abbr = frappe.db.get_value(\"Branch\",{\"name\":doc.branch},\"abbr\")\nif doc.is_consolidated and doc.is_return:\n    doc.naming_series = \"SIR/.financial_year./DL.####\"",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "event_frequency": "All",
  "modified": "2021-10-14 14:26:31.741868",
  "name": "send_email_to_purchase_manager_on_submit_of_material_request",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Material Request",
  "script": "def send_email_to_all_purchase_manager(doc,email_template):\n    purchase_manager_list=frappe.db.sql(\"\"\"select u.name,u.full_name as user_name\n    \t\tfrom `tabUser` u,`tabHas Role` r where\n    \t\tu.name=r.parent and u.enabled = 1 and r.role=\"Purchase Manager\" \"\"\",as_dict=True)\n    submitted_by=frappe.db.get_value(\"User\",{\"name\":frappe.session.user},\"full_name\")\n    if purchase_manager_list:\n        for row in  purchase_manager_list:\n            frappe.sendmail(recipients=row.name,\n            subject=\"Material Request is Submitted Successfully\",\n            message=frappe.render_template(email_template.response_html, {'items':doc.items,'name':doc.name,'user_name':row.user_name,'submitted_by':submitted_by}),\n                    reference_doctype=doc.doctype,\n                    reference_name=doc.name)\n                    \n\nif doc.material_request_type==\"Material Transfer\":\n    email_template = frappe.get_doc('Email Template','Material Request Template')\n    field_name=frappe.db.sql(\"\"\"SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS where TABLE_NAME=%s  and COLUMN_NAME=%s;\"\"\",('tabMaterial Request','branch'),as_list=True)\n    if not field_name:\n        send_email_to_all_purchase_manager(doc,email_template)\n    else:\n        if doc.branch!=None:\n            purchase_manager_list=frappe.db.sql(\"\"\"select u.name,u.full_name as user_name from  `tabHas Role` r\n        \t\t\tRIGHT JOIN `tabUser` u\n        \t\t\ton u.name=r.parent\n        \t\t \tLEFT JOIN `tabBranch Details` b on\n        \t\t\tu.name=b.parent where b.branch= %(branch)s and r.role=\"Purchase Manager\" and u.enabled = 1 \"\"\",{'branch':doc.branch},as_dict=True)\n            submitted_by=frappe.db.get_value(\"User\",{\"name\":frappe.session.user},\"full_name\")\n            if purchase_manager_list:\n                for row in  purchase_manager_list:\n                    frappe.sendmail(recipients=row.name,\n                    subject=\"Material Request is Submitted Successfully\",\n                    message=frappe.render_template(email_template.response_html, {'items':doc.items,'name':doc.name,'user_name':row.user_name,'submitted_by':submitted_by}),\n                            reference_doctype=doc.doctype,\n                            reference_name=doc.name)\n        \n        else:\n            send_email_to_all_purchase_manager(doc,email_template)\n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Save",
  "event_frequency": "All",
  "modified": "2021-10-25 13:07:40.572736",
  "name": "send_email_on_submission_of_blanket_order",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Blanket Order",
  "script": "def send_email_to_all_sales_manager(doc,email_template):\n    sales_manager_list=frappe.db.sql(\"\"\"select u.name,u.full_name as user_name\n    \t\tfrom `tabUser` u,`tabHas Role` r where\n    \t\tu.name=r.parent and u.enabled = 1 and r.role=\"Sales Manager\" \"\"\",as_dict=True)\n    submitted_by=frappe.db.get_value(\"User\",{\"name\":frappe.session.user},\"full_name\")\n    if sales_manager_list:\n        for row in  sales_manager_list:\n            if row.name != \"Administrator\":\n                frappe.sendmail(recipients=row.name,\n                subject=email_template.subject,\n                message=frappe.render_template(email_template.response_html, {'items':doc.items,'name':doc.name,'user_name':row.user_name,'submitted_by':submitted_by, 'customer_name':doc.customer}),\n                        reference_doctype=doc.doctype,\n                        reference_name=doc.name)\n                    \nemail_template = frappe.get_doc('Email Template','Blanket Order Template')\n\nfield_name=frappe.db.sql(\"\"\"SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS where TABLE_NAME=%s  and COLUMN_NAME=%s;\"\"\",('tabBlanket Order','branch'),as_list=True)\nif not field_name:\n    send_email_to_all_sales_manager(doc,email_template)\nelse:\n    if doc.branch!=None:\n        sales_manager_list=frappe.db.sql(\"\"\"select u.name,u.full_name as user_name from  `tabHas Role` r\n    \t\t\tRIGHT JOIN `tabUser` u\n    \t\t\ton u.name=r.parent\n    \t\t \tLEFT JOIN `tabBranch Details` b on\n    \t\t\tu.name=b.parent where b.branch= %(branch)s and r.role=\"Sales Manager\" and u.enabled = 1 \"\"\",{'branch':doc.branch},as_dict=True)\n        submitted_by=frappe.db.get_value(\"User\",{\"name\":frappe.session.user},\"full_name\")\n        if sales_manager_list:\n            for row in  sales_manager_list:\n                if row.name != \"Administrator\":\n                    frappe.sendmail(recipients=row.name,\n                    subject=email_template.subject,\n                    message=frappe.render_template(email_template.response_html, {'items':doc.items,'name':doc.name,'user_name':row.user_name,'submitted_by':submitted_by, 'customer_name':doc.customer}),\n                        reference_doctype=doc.doctype,\n                        reference_name=doc.name)\n    \n    else:\n        send_email_to_all_sales_manager(doc,email_template)\n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": "get_sales_invoice",
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "Before Insert",
  "event_frequency": "All",
  "modified": "2021-10-22 13:31:45.273163",
  "name": "Get Sales Invoice for Packing Slip",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": null,
  "script": "delivery_note=frappe.form_dict.get(\"delivery_note\")\ns_order= frappe.db.get_value(\"Delivery Note Item\",{\"parent\":delivery_note},\"against_sales_order\")\nsi_list=frappe.db.sql(\"\"\"select distinct parent from `tabSales Invoice Item` where sales_order=%(s_order)s or delivery_note = %(delivery_note)s\"\"\",{'s_order':s_order,'delivery_note':delivery_note},as_dict=True)\nfrappe.response['message']=si_list\n",
  "script_type": "API"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Save",
  "event_frequency": "All",
  "modified": "2021-11-17 15:47:54.839372",
  "name": "Send Email to Quality Manager",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Purchase Receipt",
  "script": "def send_email_to_all_quality_manager(doc,email_template):\n    quality_manager_list=frappe.db.sql(\"\"\"select u.name,u.full_name as user_name\n    \t\tfrom `tabUser` u,`tabHas Role` r where\n    \t\tu.name=r.parent and u.enabled = 1 and r.role=\"Quality Manager\" \"\"\",as_dict=True)\n    if quality_manager_list:\n        for row in  quality_manager_list:\n            if row.name != \"Administrator\":\n                frappe.sendmail(recipients=row.name,\n                subject=email_template.subject,\n                message=frappe.render_template(email_template.response_html, {'items': doc.items,'grn':doc.name,\"quality_manager\":row.user_name}),\n                        reference_doctype=doc.doctype,\n                        reference_name=doc.name)\n                    \nemail_template = frappe.get_doc('Email Template','Purchase_receipt_QC_template')\n\ncount = 0\nfor row in doc.items:\n    a = frappe.db.get_value(\"Item\",row.item_code,\"inspection_required_before_purchase\")\n    if a == 1:\n        count = count+1\n        \n        \nif count > 0:\n    field_name=frappe.db.sql(\"\"\"SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS where TABLE_NAME=%s  and COLUMN_NAME=%s;\"\"\",('tabPurchase Receipt','branch'),as_list=True)\n    if not field_name:\n        send_email_to_all_quality_manager(doc,email_template)\n    else:\n        if doc.branch!=None:\n            quality_manager_list=frappe.db.sql(\"\"\"select u.name,u.full_name as user_name from  `tabHas Role` r\n        \t\t\tRIGHT JOIN `tabUser` u\n        \t\t\ton u.name=r.parent\n        \t\t \tLEFT JOIN `tabBranch Details` b on\n        \t\t\tu.name=b.parent where b.branch= %(branch)s and r.role=\"Quality Manager\" and u.enabled = 1 \"\"\",{'branch':doc.branch},as_dict=True)\n            if quality_manager_list:\n                for row in  quality_manager_list:\n                    if row.name != \"Administrator\":\n                        frappe.sendmail(recipients=row.name,\n                        subject=email_template.subject,\n                        message=frappe.render_template(email_template.response_html, {'items': doc.items,'grn':doc.name,\"quality_manager\":row.user_name}),\n                            reference_doctype=doc.doctype,\n                            reference_name=doc.name)\n        \n        else:\n            send_email_to_all_quality_manager(doc,email_template)",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Save",
  "event_frequency": "All",
  "modified": "2021-11-12 11:21:59.992086",
  "name": "Send_email_to_manufacturing_manager",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "reference_doctype": "Material Request",
  "script": "if doc.material_request_type == \"Manufacture\" and doc.workflow_state == \"Pending\":\n    def send_email_to_all_manufacture_manager(doc,email_template):\n        manufacture_manager_list=frappe.db.sql(\"\"\"select u.name,u.full_name as user_name\n        \t\tfrom `tabUser` u,`tabHas Role` r where\n        \t\tu.name=r.parent and u.enabled = 1 and r.role=\"Manufacturing Manager\" \"\"\",as_dict=True)\n        if manufacture_manager_list:\n            for row in  manufacture_manager_list:\n                if row.name != \"Administrator\":\n                    frappe.sendmail(recipients=row.name,\n                    subject=email_template.subject,\n                    message=frappe.render_template(email_template.response_html, {'doc': doc,'name':doc.name}),\n                            reference_doctype=doc.doctype,\n                            reference_name=doc.name)\n                            \n    email_template = frappe.get_doc('Email Template','Email to Manufacturing Manager')\n    \n    field_name=frappe.db.sql(\"\"\"SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS where TABLE_NAME=%s  and COLUMN_NAME=%s;\"\"\",('tabMaterial Request','branch'),as_list=True)\n    if not field_name:\n        send_email_to_all_manufacture_manager(doc,email_template)\n    else:\n        if doc.branch!=None:\n            quality_manager_list=frappe.db.sql(\"\"\"select u.name,u.full_name as user_name from  `tabHas Role` r\n        \t\t\tRIGHT JOIN `tabUser` u\n        \t\t\ton u.name=r.parent\n        \t\t \tLEFT JOIN `tabBranch Details` b on\n        \t\t\tu.name=b.parent where b.branch= %(branch)s and r.role=\"Manufacturing Manager\" and u.enabled = 1 \"\"\",{'branch':doc.branch},as_dict=True)\n            if quality_manager_list:\n                for row in  quality_manager_list:\n                    if row.name != \"Administrator\":\n                        frappe.sendmail(recipients=row.name,\n                        subject=email_template.subject,\n                        message=frappe.render_template(email_template.response_html, {'doc': doc,'name':doc.name}),\n                            reference_doctype=doc.doctype,\n                            reference_name=doc.name)\n        \n        else:\n            send_email_to_all_manufacture_manager(doc,email_template)",
  "script_type": "DocType Event"
 }
]